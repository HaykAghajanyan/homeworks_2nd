{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/React/homeworks_2nd/messages-redux/src/components/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addUser } from '../redux/ducks/userDuck';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  var _errors$username, _errors$email, _errors$password;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const defaultInputValues = {\n    username: '',\n    email: '',\n    password: ''\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: defaultInputValues\n  });\n\n  const onSubmit = data => {\n    dispatch(addUser(data));\n    setTimeout(() => {\n      navigate(\"/login\", {\n        replace: true\n      });\n    }, 1000);\n  };\n\n  const [formMessage, setformMessage] = useState('');\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      if (user.username) {\n        setformMessage('Thank you for your registration. Redirecting to login page...');\n      } else {\n        setformMessage('Registration Failed!');\n      }\n    }\n  }, [isSubmitSuccessful, user]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      children: formMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"username\", {\n          required: \"This field is required.\",\n          maxLength: 100\n        }),\n        placeholder: \"Username\",\n        className: 'form-control ' + (errors.username ? 'is-invalid' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"email\", {\n          required: \"This field is required.\",\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: \"Please enter a valid email address\"\n          }\n        }),\n        placeholder: \"Email\",\n        className: 'form-control ' + (errors.email ? 'is-invalid' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\", {\n          required: \"This field is required.\",\n          min: {\n            value: 3,\n            message: 'Password minimum length must be at least 3 characters'\n          }\n        }),\n        placeholder: \"Password\",\n        className: 'form-control ' + (errors.password ? 'is-invalid' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group form-bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"Register\",\n        value: \"Register\",\n        className: \"btn btn-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"XIc9BQF1+Z53E6dOWB83YRY6l4I=\", false, function () {\n  return [useDispatch, useNavigate, useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/tom/Desktop/React/homeworks_2nd/messages-redux/src/components/Register.jsx"],"names":["React","useDispatch","useNavigate","addUser","useForm","Register","dispatch","navigate","defaultInputValues","username","email","password","register","handleSubmit","formState","errors","defaultValues","onSubmit","data","setTimeout","replace","formMessage","setformMessage","useState","useEffect","isSubmitSuccessful","user","fontWeight","textAlign","required","maxLength","message","pattern","value","min"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {addUser} from '../redux/ducks/userDuck';\nimport {useForm} from 'react-hook-form'\n\nfunction Register() {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const defaultInputValues = {username: '', email: '', password: ''}\n  const { register, handleSubmit, formState: {errors} } = useForm({defaultValues: defaultInputValues});\n\n  const onSubmit = data => {\n    dispatch( addUser(data) );\n    setTimeout(() =>{ navigate(\"/login\", { replace: true }) }, 1000);\n  }\n\n  const [formMessage, setformMessage] = useState('');\n  \n  useEffect(() => {\n    if( isSubmitSuccessful ){\n      if( user.username ){\n        setformMessage('Thank you for your registration. Redirecting to login page...');\n      } else {\n        setformMessage('Registration Failed!');\n      }\n    }\n  }, [isSubmitSuccessful, user])\n\n  return (\n    <form onSubmit={ handleSubmit( onSubmit ) }>\n      <div style={{fontWeight:'bold', textAlign: 'center'}}>{formMessage}</div>\n      <div className=\"form-group\">\n        <input type=\"text\" {...register(\"username\", {required: \"This field is required.\", maxLength: 100})} placeholder=\"Username\" className={'form-control ' + (errors.username ? 'is-invalid' : '')}/>\n        <div className=\"invalid-feedback\">{errors.username?.message}</div>\n      </div>\n      <div className=\"form-group\">\n        <input type=\"text\" {...register(\"email\", {required: \"This field is required.\", pattern: {value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i, message: \"Please enter a valid email address\"}})} placeholder=\"Email\" className={'form-control ' + (errors.email ? 'is-invalid' : '')}/>\n        <div className=\"invalid-feedback\">{errors.email?.message}</div>\n      </div>\n      <div className=\"form-group\">\n        <input type=\"password\" {...register(\"password\", {required: \"This field is required.\", min: {value:3, message: 'Password minimum length must be at least 3 characters'} })} placeholder=\"Password\" className={'form-control ' + (errors.password ? 'is-invalid' : '')}/>\n        <div className=\"invalid-feedback\">{errors.password?.message}</div>\n      </div>\n      <div className=\"form-group form-bottom\">\n        <input type=\"submit\" name=\"Register\" value=\"Register\" className=\"btn btn-primary\"/>\n      </div>\n    </form>\n  );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}