{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37498\\\\Desktop\\\\homeworks_2nd\\\\homework1\\\\src\\\\components\\\\home\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home(_ref) {\n  _s();\n\n  let {\n    color,\n    attr\n  } = _ref;\n  const [message, setMessage] = useState([]);\n  useEffect(() => {\n    fetch(\"/json/messages.json\").then(res => res.json()).then(res => setMessage(res.messages));\n  }, []);\n  useEffect((color, attr) => {\n    console.log('color', color);\n\n    if (attr == 'Name') {\n      message.name.style = {\n        color: color\n      };\n    } else if (attr == 'Text') {\n      message.text.style = {\n        color: color\n      };\n    }\n  }, [color, attr]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: message.map((item, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: attr == 'Name' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: color\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : attr == 'Text' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: color\n            },\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"pAzKhu2emU5tAWZYGkDmwcxrXaI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/37498/Desktop/homeworks_2nd/homework1/src/components/home/home.js"],"names":["useEffect","useState","React","Home","color","attr","message","setMessage","fetch","then","res","json","messages","console","log","name","style","text","map","item","id","date"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,IAAT,OAA6B;AAAA;;AAAA,MAAf;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAe;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,qBAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWC,GAAD,IAASH,UAAU,CAACG,GAAG,CAACE,QAAL,CAF7B;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAZ,EAAAA,SAAS,CAAC,CAACI,KAAD,EAAQC,IAAR,KAAiB;AACvBQ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBV,KAArB;;AACA,QAAIC,IAAI,IAAI,MAAZ,EAAoB;AAChBC,MAAAA,OAAO,CAACS,IAAR,CAAaC,KAAb,GAAqB;AAACZ,QAAAA,KAAK,EAAEA;AAAR,OAArB;AACH,KAFD,MAEO,IAAIC,IAAI,IAAI,MAAZ,EAAoB;AACvBC,MAAAA,OAAO,CAACW,IAAR,CAAaD,KAAb,GAAqB;AAACZ,QAAAA,KAAK,EAAEA;AAAR,OAArB;AACH;AAEJ,GARQ,EAQN,CAACA,KAAD,EAAQC,IAAR,CARM,CAAT;AASA,sBACI;AAAA,cACKC,OAAO,CAACY,GAAR,CAAY,CAACC,IAAD,EAAOC,EAAP,KAAc;AACvB,0BAAQ;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACHf,IAAI,IAAI,MAAR,gBACG;AAAA,kCACI;AAAM,YAAA,KAAK,EAAE;AAACD,cAAAA,KAAK,EAAEA;AAAR,aAAb;AAAA,sBAA8Be,IAAI,CAACJ;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAOI,IAAI,CAACF;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAOE,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,wBADH,GAMGhB,IAAI,IAAI,MAAR,gBACI;AAAA,kCACI;AAAA,sBAAOc,IAAI,CAACJ;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,KAAK,EAAE;AAACX,cAAAA,KAAK,EAAEA;AAAR,aAAb;AAAA,sBAA8Be,IAAI,CAACF;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAOE,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,wBADJ,gBAMI;AAAA,kCAAE;AAAA,sBAAOF,IAAI,CAACJ;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAF,eACI;AAAA,sBAAOI,IAAI,CAACF;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAOE,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAbJ,SAA2BD,EAA3B;AAAA;AAAA;AAAA;AAAA,cAAR;AAmBH,KApBA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GA5CQjB,I;;KAAAA,I;AA+CT,eAAeA,IAAf","sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport React from 'react';\r\n\r\nfunction Home({color, attr}) {\r\n    const [message, setMessage] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"/json/messages.json\")\r\n            .then((res) => res.json())\r\n            .then((res) => setMessage(res.messages));\r\n    }, [])\r\n\r\n    useEffect((color, attr) => {\r\n        console.log('color', color)\r\n        if (attr == 'Name') {\r\n            message.name.style = {color: color}\r\n        } else if (attr == 'Text') {\r\n            message.text.style = {color: color}\r\n        }\r\n\r\n    }, [color, attr])\r\n    return (\r\n        <div>\r\n            {message.map((item, id) => {\r\n                return (<div className='card' key={id}>\r\n                    {attr == 'Name' ?\r\n                        <>\r\n                            <span style={{color: color}}>{item.name}</span>\r\n                            <span>{item.text}</span>\r\n                            <span>{item.date}</span>\r\n                        </> :\r\n                        attr == 'Text' ?\r\n                            <>\r\n                                <span>{item.name}</span>\r\n                                <span style={{color: color}}>{item.text}</span>\r\n                                <span>{item.date}</span>\r\n                            </> :\r\n                            <><span>{item.name}</span>\r\n                                <span>{item.text}</span>\r\n                                <span>{item.date}</span>\r\n                            </>}\r\n                </div>)\r\n\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}