{"ast":null,"code":"const ADD_USER = 'user/ADD_USER';\nconst LOGIN_USER = 'user/LOGIN_USER';\nexport const addUser = payload => ({\n  type: ADD_USER,\n  payload\n});\nconst initialState = {\n  user: {\n    username: '',\n    email: '',\n    password: ''\n  },\n  users: []\n};\n\nconst userDuck = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case ADD_USER:\n      return { ...state,\n        users: payload\n      };\n\n    case LOGIN_USER:\n      const loginUser = users.find(user => user.username === payload.username && user.password === payload.password);\n      return { ...state,\n        user: loginUser\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userDuck;","map":{"version":3,"sources":["/home/tom/Desktop/React/homeworks_2nd/messages-redux/src/redux/ducks/userDuck.js"],"names":["ADD_USER","LOGIN_USER","addUser","payload","type","initialState","user","username","email","password","users","userDuck","state","loginUser","find"],"mappings":"AAEA,MAAMA,QAAQ,GAAG,eAAjB;AACA,MAAMC,UAAU,GAAG,iBAAnB;AAEA,OAAO,MAAMC,OAAO,GAAIC,OAAD,KAAc;AAACC,EAAAA,IAAI,EAAEJ,QAAP;AAAiBG,EAAAA;AAAjB,CAAd,CAAhB;AAEP,MAAME,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE,EAFL;AAGFC,IAAAA,QAAQ,EAAE;AAHR,GADW;AAMjBC,EAAAA,KAAK,EAAE;AANU,CAArB;;AASA,MAAMC,QAAQ,GAAG,YAA4C;AAAA,MAA1CC,KAA0C,uEAAlCP,YAAkC;AAAA,MAApB;AAACD,IAAAA,IAAD;AAAOD,IAAAA;AAAP,GAAoB;;AAEzD,UAAOC,IAAP;AAEI,SAAKJ,QAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHF,QAAAA,KAAK,EAAEP;AAFJ,OAAP;;AAIJ,SAAKF,UAAL;AACI,YAAMY,SAAS,GAAGH,KAAK,CAACI,IAAN,CAAYR,IAAI,IAAKA,IAAI,CAACC,QAAL,KAAkBJ,OAAO,CAACI,QAA1B,IAAsCD,IAAI,CAACG,QAAL,KAAkBN,OAAO,CAACM,QAArF,CAAlB;AACA,aAAO,EACH,GAAGG,KADA;AAEHN,QAAAA,IAAI,EAAEO;AAFH,OAAP;;AAIJ;AACI,aAAOD,KAAP;AAdR;AAiBH,CAnBD;;AAqBA,eAAeD,QAAf","sourcesContent":["\n\nconst ADD_USER = 'user/ADD_USER';\nconst LOGIN_USER = 'user/LOGIN_USER';\n\nexport const addUser = (payload) => ({type: ADD_USER, payload});\n\nconst initialState = {\n    user: {\n        username: '',\n        email: '',\n        password: ''\n    },\n    users: [],\n}\n\nconst userDuck = ( state = initialState, {type, payload}) => { \n    \n    switch(type) {\n\n        case ADD_USER: \n            return {\n                ...state,\n                users: payload\n            }\n        case LOGIN_USER: \n            const loginUser = users.find( user => (user.username === payload.username && user.password === payload.password ) );\n            return {\n                ...state,\n                user: loginUser\n            }\n        default:\n            return state;\n    }\n\n}\n\nexport default userDuck;"]},"metadata":{},"sourceType":"module"}