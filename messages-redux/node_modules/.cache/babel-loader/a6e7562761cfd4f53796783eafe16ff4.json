{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/React/homeworks_2nd/messages-redux/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser } from '../redux/ducks/userDuck';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector();\n  const [wrongUser, setWrongUser] = useState('');\n  const defaultValues = {\n    username: '',\n    password: ''\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: defaultValues\n  });\n\n  const onSubmit = data => {\n    dispatch(loginUser(data));\n    console.log(user);\n\n    if (user.username) {\n      setWrongUser('');\n    } else {\n      setWrongUser('Login Failed!');\n      console.log(wrongUser);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      children: wrongUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"username\", {\n          required: \"This field is required.\",\n          maxLength: 100\n        }),\n        placeholder: \"Username\",\n        className: 'form-control ' + (errors.username ? 'is-invalid' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\", {\n          required: \"This field is required.\",\n          min: {\n            value: 3,\n            message: 'Password minimum length must be at least 3 characters'\n          }\n        }),\n        placeholder: \"Password\",\n        className: 'form-control ' + (errors.password ? 'is-invalid' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group form-bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"Register\",\n        value: \"Login\",\n        className: \"btn btn-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"OtY0ErpjqbnqZ6aEi0yrou6O3VU=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/tom/Desktop/React/homeworks_2nd/messages-redux/src/components/Login.jsx"],"names":["React","useState","useDispatch","useSelector","loginUser","useForm","Login","dispatch","user","wrongUser","setWrongUser","defaultValues","username","password","register","handleSubmit","formState","errors","onSubmit","data","console","log","fontWeight","required","maxLength","message","min","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginUser} from '../redux/ducks/userDuck';\nimport {useForm} from 'react-hook-form'\n\nfunction Login() {\n\n  const dispatch = useDispatch();\n  const {user} = useSelector();\n\n  const [wrongUser, setWrongUser] = useState('');\n\n  const defaultValues = {\n    username: '',\n    password: '',\n  }\n\n  const { register, handleSubmit, formState: {errors} } = useForm({defaultValues:defaultValues});\n\n  const onSubmit = data => {\n    \n    dispatch( loginUser(data) );\n    \n    console.log(user);\n\n    if( user.username ){\n      setWrongUser('');\n    } else {\n      setWrongUser('Login Failed!');\n      console.log(wrongUser);\n    }\n  }\n\n \n\n  return (\n    <form onSubmit={ handleSubmit( onSubmit ) }>\n      <div style={{fontWeight:'bold'}}>{wrongUser}</div>\n      <div className=\"form-group\">\n        <input type=\"text\" {...register(\"username\", {required: \"This field is required.\", maxLength: 100})} placeholder=\"Username\" className={'form-control ' + (errors.username ? 'is-invalid' : '')}/>\n        <div className=\"invalid-feedback\">{errors.username?.message}</div>\n      </div>\n      <div className=\"form-group\">\n        <input type=\"password\" {...register(\"password\", {required: \"This field is required.\", min: {value:3, message: 'Password minimum length must be at least 3 characters'} } ) } placeholder=\"Password\" className={'form-control ' + (errors.password ? 'is-invalid' : '')}/>\n        <div className=\"invalid-feedback\">{errors.password?.message}</div>\n      </div>\n      <div className=\"form-group form-bottom\">\n        <input type=\"submit\" name=\"Register\" value=\"Login\" className=\"btn btn-primary\"/>\n      </div>\n    </form>\n  );\n\n\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}