{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/React/homeworks_2nd/messages-redux/src/components/Login.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginUser } from '../redux/ducks/userDuck';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s2();\n\n  var _errors$username, _errors$password;\n\n  const defaultInputValues = {\n    username: '',\n    password: ''\n  };\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.userDuck.user);\n  const {\n    register,\n    handleSubmit,\n    submitCount,\n    formState: {\n      errors,\n      isSubmitSuccessful\n    }\n  } = useForm({\n    defaultValues: defaultInputValues\n  });\n\n  const onSubmit = data => {\n    var _s = $RefreshSig$();\n\n    dispatch(loginUser(data));\n\n    _s(setTimeout(_s(() => {\n      _s();\n\n      let navigate = useNavigate();\n      navigate(\"/\", {\n        replace: true\n      });\n    }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n      return [useNavigate];\n    }), 1000), \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n      return [useNavigate];\n    });\n  };\n\n  const [wrongUser, setWrongUser] = useState('');\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      if (user.username) {\n        setWrongUser('Login Succeed...');\n      } else {\n        setWrongUser('Login Failed!');\n      }\n    }\n  }, [isSubmitSuccessful, user]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      children: wrongUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"username\", {\n          required: \"This field is required.\",\n          maxLength: 100\n        }),\n        placeholder: \"Username\",\n        className: 'form-control ' + (errors.username ? 'is-invalid' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\", {\n          required: \"This field is required.\",\n          min: {\n            value: 3,\n            message: 'Password minimum length must be at least 3 characters'\n          }\n        }),\n        placeholder: \"Password\",\n        className: 'form-control ' + (errors.password ? 'is-invalid' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group form-bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"Register\",\n        value: \"Login\",\n        className: \"btn btn-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Login, \"fdGzoZ9sObOLIVloFCDJ/GEEkvk=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/tom/Desktop/React/homeworks_2nd/messages-redux/src/components/Login.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","loginUser","useForm","Login","defaultInputValues","username","password","dispatch","user","state","userDuck","register","handleSubmit","submitCount","formState","errors","isSubmitSuccessful","defaultValues","onSubmit","data","setTimeout","navigate","replace","wrongUser","setWrongUser","fontWeight","textAlign","required","maxLength","message","min","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {loginUser} from '../redux/ducks/userDuck';\nimport {useForm} from 'react-hook-form'\n\nfunction Login() {\n\n  const defaultInputValues = {\n    username: '',\n    password: '',\n  }\n  \n  const dispatch = useDispatch();\n  const user = useSelector( state => state.userDuck.user );\n  const { register, handleSubmit, submitCount, formState: {errors, isSubmitSuccessful} } = useForm({defaultValues: defaultInputValues});\n\n  const onSubmit = data => {\n    \n    dispatch(loginUser(data));\n    setTimeout(() =>{\n      let navigate = useNavigate();\n      navigate(\"/\", { replace: true });\n    }, 1000);\n  }\n\n\n  const [wrongUser, setWrongUser] = useState('');\n\n  useEffect(() => {\n    if( isSubmitSuccessful ){\n      if( user.username ){\n        setWrongUser('Login Succeed...');\n      } else {\n        setWrongUser('Login Failed!');\n      }\n    }\n  }, [isSubmitSuccessful, user])\n\n\n  return (\n    <form onSubmit={ handleSubmit( onSubmit ) }>\n      <div style={{fontWeight:'bold', textAlign: 'center'}}>{wrongUser}</div>\n      <div className=\"form-group\">\n        <input type=\"text\" {...register(\"username\", {required: \"This field is required.\", maxLength: 100})} placeholder=\"Username\" className={'form-control ' + (errors.username ? 'is-invalid' : '')}/>\n        <div className=\"invalid-feedback\">{errors.username?.message}</div>\n      </div>\n      <div className=\"form-group\">\n        <input type=\"password\" {...register(\"password\", {required: \"This field is required.\", min: {value:3, message: 'Password minimum length must be at least 3 characters'} } ) } placeholder=\"Password\" className={'form-control ' + (errors.password ? 'is-invalid' : '')}/>\n        <div className=\"invalid-feedback\">{errors.password?.message}</div>\n      </div>\n      <div className=\"form-group form-bottom\">\n        <input type=\"submit\" name=\"Register\" value=\"Login\" className=\"btn btn-primary\"/>\n      </div>\n    </form>\n  );\n\n\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}